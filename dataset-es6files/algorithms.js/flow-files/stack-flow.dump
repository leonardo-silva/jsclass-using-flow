stack-flow.js:9:1-12: string
stack-flow.js:14:1,20:1: [class: Node]
stack-flow.js:15:15-19: 
stack-flow.js:16:5-8: Node
stack-flow.js:16:5-22: 
stack-flow.js:16:18-22: 
stack-flow.js:17:5-8: Node
stack-flow.js:17:5-20: null
stack-flow.js:17:17-20: null
stack-flow.js:18:5-8: Node
stack-flow.js:18:5-20: null
stack-flow.js:18:17-20: null
stack-flow.js:25:1,160:1: [class: LinkedList]
stack-flow.js:27:5-8: LinkedList
stack-flow.js:27:5-20: number
stack-flow.js:27:20: number
stack-flow.js:28:5-8: LinkedList
stack-flow.js:28:5-20: null
stack-flow.js:28:17-20: null
stack-flow.js:29:5-8: LinkedList
stack-flow.js:29:5-20: null
stack-flow.js:29:17-20: null
stack-flow.js:32:5-10: [class: Object]
stack-flow.js:32:5,36:6: LinkedList
stack-flow.js:32:27-30: LinkedList
stack-flow.js:32:33-40: string
stack-flow.js:32:43,36:5: {get: () => }
stack-flow.js:33:12,35:7: () => 
stack-flow.js:33:12,35:18: () => 
stack-flow.js:34:16-19: LinkedList
stack-flow.js:34:16-27: 
stack-flow.js:35:14-17: LinkedList
stack-flow.js:45:12-15: LinkedList
stack-flow.js:45:12-22: 
stack-flow.js:45:12-28: boolean
stack-flow.js:45:28: number
stack-flow.js:54:7: 
stack-flow.js:54:10-14: 
stack-flow.js:55:9-13: 
stack-flow.js:55:9-27: boolean
stack-flow.js:55:17-20: LinkedList
stack-flow.js:55:17-27: 
stack-flow.js:55:32-36: 
stack-flow.js:55:32-40: boolean
stack-flow.js:55:40: number
stack-flow.js:56:13-44: Error
stack-flow.js:56:17-21: [class: Error]
stack-flow.js:56:23-43: string
stack-flow.js:59:9-12: Node
stack-flow.js:59:16-26: Node
stack-flow.js:59:20-23: [class: Node]
stack-flow.js:59:25: 
stack-flow.js:61:9-13: 
stack-flow.js:61:19-27: void
stack-flow.js:61:32-36: 
stack-flow.js:61:32-50: boolean
stack-flow.js:61:40-43: LinkedList
stack-flow.js:61:40-50: 
stack-flow.js:62:11-18: 
stack-flow.js:63:11-18: 
stack-flow.js:65:11-15: 
stack-flow.js:65:21: number
stack-flow.js:67:9-28: 
stack-flow.js:67:20-23: LinkedList
stack-flow.js:67:20-28: 
stack-flow.js:68:9-12: LinkedList
stack-flow.js:68:9-24: Node
stack-flow.js:68:21-24: Node
stack-flow.js:70:9-38: 
stack-flow.js:70:20-23: LinkedList
stack-flow.js:70:20-38: 
stack-flow.js:70:33-37: 
stack-flow.js:71:9-32: 
stack-flow.js:71:20-27: 
stack-flow.js:71:20-32: 
stack-flow.js:72:9-16: 
stack-flow.js:72:9-28: Node
stack-flow.js:72:25-28: Node
stack-flow.js:73:9-12: Node
stack-flow.js:73:9-28: 
stack-flow.js:73:21-28: 
stack-flow.js:75:7-14: 
stack-flow.js:75:7-26: Node
stack-flow.js:75:23-26: Node
stack-flow.js:76:7-10: Node
stack-flow.js:76:7-26: 
stack-flow.js:76:19-26: 
stack-flow.js:79:12-15: LinkedList
stack-flow.js:79:23-26: LinkedList
stack-flow.js:79:23-38: Node
stack-flow.js:79:35-38: Node
stack-flow.js:81:11-14: LinkedList
stack-flow.js:82:9-17: 
stack-flow.js:82:9-29: Node
stack-flow.js:82:26-29: Node
stack-flow.js:83:9-12: Node
stack-flow.js:83:9-29: 
stack-flow.js:83:21-29: 
stack-flow.js:85:7-10: LinkedList
stack-flow.js:85:7-22: Node
stack-flow.js:85:19-22: Node
stack-flow.js:88:5-8: LinkedList
stack-flow.js:88:5-16: 
stack-flow.js:88:5-18: number
stack-flow.js:97:7-11: 
stack-flow.js:98:12-15: LinkedList
stack-flow.js:98:12-30: 
stack-flow.js:98:12-36: 
stack-flow.js:98:25-29: 
stack-flow.js:107:11-15: 
stack-flow.js:108:9-13: 
stack-flow.js:108:9-28: boolean
stack-flow.js:108:18-21: LinkedList
stack-flow.js:108:18-28: 
stack-flow.js:108:33-37: 
stack-flow.js:108:33-41: boolean
stack-flow.js:108:41: number
stack-flow.js:109:13-44: Error
stack-flow.js:109:17-21: [class: Error]
stack-flow.js:109:23-43: string
stack-flow.js:112:9-12: 
stack-flow.js:112:16-19: LinkedList
stack-flow.js:112:16-24: 
stack-flow.js:113:14: number
stack-flow.js:113:18: number
stack-flow.js:113:21: number
stack-flow.js:113:21-30: boolean
stack-flow.js:113:26-30: 
stack-flow.js:113:33-35: number
stack-flow.js:114:7-22: 
stack-flow.js:114:14-17: 
stack-flow.js:114:14-22: 
stack-flow.js:117:12-15: 
stack-flow.js:125:7-11: 
stack-flow.js:126:9-13: 
stack-flow.js:126:9-28: boolean
stack-flow.js:126:18-21: LinkedList
stack-flow.js:126:18-28: 
stack-flow.js:126:33-37: 
stack-flow.js:126:33-41: boolean
stack-flow.js:126:41: number
stack-flow.js:127:13-44: Error
stack-flow.js:127:17-21: [class: Error]
stack-flow.js:127:23-43: string
stack-flow.js:130:5-8: LinkedList
stack-flow.js:130:5-37: void
stack-flow.js:130:18-21: LinkedList
stack-flow.js:130:18-36: 
stack-flow.js:130:31-35: 
stack-flow.js:133:11-14: 
stack-flow.js:134:9-12: 
stack-flow.js:134:18-21: LinkedList
stack-flow.js:136:7-10: 
stack-flow.js:136:7-27: 
stack-flow.js:136:19-22: 
stack-flow.js:136:19-27: 
stack-flow.js:138:7-10: 
stack-flow.js:138:7-15: 
stack-flow.js:138:7-32: 
stack-flow.js:138:24-27: 
stack-flow.js:138:24-32: 
stack-flow.js:140:9-12: 
stack-flow.js:140:18-21: 
stack-flow.js:142:7-10: 
stack-flow.js:142:7-27: 
stack-flow.js:142:19-22: 
stack-flow.js:142:19-27: 
stack-flow.js:144:7-10: 
stack-flow.js:144:7-15: 
stack-flow.js:144:7-32: 
stack-flow.js:144:24-27: 
stack-flow.js:144:24-32: 
stack-flow.js:147:5-8: 
stack-flow.js:147:5-16: 
stack-flow.js:147:5-18: number
stack-flow.js:153:11-12: 
stack-flow.js:154:9-12: 
stack-flow.js:154:16-19: LinkedList
stack-flow.js:154:16-24: 
stack-flow.js:155:12-15: 
stack-flow.js:156:7-8: 
stack-flow.js:156:7-20: 
stack-flow.js:156:10-13: 
stack-flow.js:156:10-19: 
stack-flow.js:157:7-22: 
stack-flow.js:157:14-17: 
stack-flow.js:157:14-22: 
stack-flow.js:167:1,213:1: [class: Queue]
stack-flow.js:169:5-8: Queue
stack-flow.js:169:5-37: LinkedList
stack-flow.js:169:22-37: LinkedList
stack-flow.js:169:26-35: [class: LinkedList]
stack-flow.js:171:5-10: [class: Object]
stack-flow.js:171:5,175:6: Queue
stack-flow.js:171:27-30: Queue
stack-flow.js:171:33-40: string
stack-flow.js:171:43,175:5: {get: () => }
stack-flow.js:172:12,174:7: () => 
stack-flow.js:172:12,174:18: () => 
stack-flow.js:173:16-19: Queue
stack-flow.js:173:16-29: 
stack-flow.js:173:16-36: 
stack-flow.js:174:14-17: Queue
stack-flow.js:179:12-15: Queue
stack-flow.js:179:12-25: 
stack-flow.js:179:12-35: 
stack-flow.js:185:8: 
stack-flow.js:186:5-8: Queue
stack-flow.js:186:5-18: 
stack-flow.js:186:5-25: 
stack-flow.js:186:24: 
stack-flow.js:193:9-12: Queue
stack-flow.js:193:9-22: 
stack-flow.js:194:13-36: Error
stack-flow.js:194:17-21: [class: Error]
stack-flow.js:194:23-35: string
stack-flow.js:196:9: 
stack-flow.js:196:13-16: Queue
stack-flow.js:196:13-26: 
stack-flow.js:196:13-33: 
stack-flow.js:196:32: number
stack-flow.js:197:5-8: Queue
stack-flow.js:197:5-18: 
stack-flow.js:197:5-25: 
stack-flow.js:197:24: number
stack-flow.js:198:12: 
stack-flow.js:202:9-12: Queue
stack-flow.js:202:9-22: 
stack-flow.js:203:13-36: Error
stack-flow.js:203:17-21: [class: Error]
stack-flow.js:203:23-35: string
stack-flow.js:206:12-15: Queue
stack-flow.js:206:12-25: 
stack-flow.js:206:12-32: 
stack-flow.js:206:31: number
stack-flow.js:209:11-12: 
stack-flow.js:210:5-8: Queue
stack-flow.js:210:5-18: 
stack-flow.js:210:5-30: 
stack-flow.js:210:28-29: 
stack-flow.js:220:1,232:1: [class: Stack]
stack-flow.js:220:21-25: [class: Queue]
stack-flow.js:222:5-9: [class: Queue]
stack-flow.js:222:5-20: 
stack-flow.js:222:16-19: void
stack-flow.js:228:8: number
stack-flow.js:229:5-8: Stack
stack-flow.js:229:5-18: 
stack-flow.js:229:5-28: 
stack-flow.js:229:24: number
stack-flow.js:229:27: number
stack-flow.js:246:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:246:14-30: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:248:1-8: 
stack-flow.js:248:1,279:2: 
stack-flow.js:248:10-16: string
stack-flow.js:248:19,279:1: () => void
stack-flow.js:249:3-4: 
stack-flow.js:249:3,253:4: 
stack-flow.js:249:6-25: string
stack-flow.js:249:28,253:3: () => void
stack-flow.js:250:9: Stack
stack-flow.js:250:13-23: Stack
stack-flow.js:250:17-21: [class: Stack]
stack-flow.js:251:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:251:5-23: void
stack-flow.js:251:12: Stack
stack-flow.js:251:12-22: 
stack-flow.js:252:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:252:5-29: void
stack-flow.js:252:18: Stack
stack-flow.js:252:18-25: 
stack-flow.js:252:28: number
stack-flow.js:255:3-4: 
stack-flow.js:255:3,266:4: 
stack-flow.js:255:6-36: string
stack-flow.js:255:39,266:3: () => void
stack-flow.js:256:9: Stack
stack-flow.js:256:13-23: Stack
stack-flow.js:256:17-21: [class: Stack]
stack-flow.js:257:5: Stack
stack-flow.js:257:5-13: void
stack-flow.js:257:12: number
stack-flow.js:258:5: Stack
stack-flow.js:258:5-13: void
stack-flow.js:258:12: number
stack-flow.js:259:5: Stack
stack-flow.js:259:5-13: void
stack-flow.js:259:12: number
stack-flow.js:260:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:260:5-29: void
stack-flow.js:260:18: Stack
stack-flow.js:260:18-25: 
stack-flow.js:260:28: number
stack-flow.js:261:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:261:5-28: void
stack-flow.js:261:18: Stack
stack-flow.js:261:18-24: 
stack-flow.js:261:27: number
stack-flow.js:262:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:262:5-28: void
stack-flow.js:262:18: Stack
stack-flow.js:262:18-24: 
stack-flow.js:262:27: number
stack-flow.js:263:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:263:5-28: void
stack-flow.js:263:18: Stack
stack-flow.js:263:18-24: 
stack-flow.js:263:27: number
stack-flow.js:264:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:264:5-23: void
stack-flow.js:264:12: Stack
stack-flow.js:264:12-22: 
stack-flow.js:265:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:265:5-39: void
stack-flow.js:265:19-31: () => 
stack-flow.js:265:25: Stack
stack-flow.js:265:25-31: 
stack-flow.js:265:34-38: [class: Error]
stack-flow.js:268:3-4: 
stack-flow.js:268:3,278:4: 
stack-flow.js:268:6-52: string
stack-flow.js:268:6,269:35: string
stack-flow.js:269:5-35: string
stack-flow.js:269:38,278:3: () => void
stack-flow.js:270:9: Stack
stack-flow.js:270:13-23: Stack
stack-flow.js:270:17-21: [class: Stack]
stack-flow.js:271:5: Stack
stack-flow.js:271:5-13: void
stack-flow.js:271:12: number
stack-flow.js:272:5: Stack
stack-flow.js:272:5-13: void
stack-flow.js:272:12: number
stack-flow.js:273:5: Stack
stack-flow.js:273:5-13: void
stack-flow.js:273:12: number
stack-flow.js:274:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:274:5-29: void
stack-flow.js:274:18: Stack
stack-flow.js:274:18-25: 
stack-flow.js:274:28: number
stack-flow.js:275:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:275:5-29: void
stack-flow.js:275:18: Stack
stack-flow.js:275:18-25: 
stack-flow.js:275:28: number
stack-flow.js:276:5: Stack
stack-flow.js:276:5-11: 
stack-flow.js:277:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
stack-flow.js:277:5-29: void
stack-flow.js:277:18: Stack
stack-flow.js:277:18-25: 
stack-flow.js:277:28: number
