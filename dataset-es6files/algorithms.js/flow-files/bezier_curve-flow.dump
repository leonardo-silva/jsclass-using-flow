bezier_curve-flow.js:1:1-12: string
bezier_curve-flow.js:14:1,60:1: [class: BezierCurve]
bezier_curve-flow.js:15:15-20: [{x: number, y: number}, {x: number, y: number}]
bezier_curve-flow.js:16:5-8: BezierCurve
bezier_curve-flow.js:16:5-26: number
bezier_curve-flow.js:16:14-19: [{x: number, y: number}, {x: number, y: number}]
bezier_curve-flow.js:16:14-26: number
bezier_curve-flow.js:17:5-8: BezierCurve
bezier_curve-flow.js:17:5-15: Array<{x: number, y: number}>
bezier_curve-flow.js:17:14-15: Array<{x: number, y: number}>
bezier_curve-flow.js:20:9: [number]
bezier_curve-flow.js:20:13-15: [number]
bezier_curve-flow.js:20:14: number
bezier_curve-flow.js:21:9: number
bezier_curve-flow.js:22:9: number
bezier_curve-flow.js:23:10-14: number
bezier_curve-flow.js:23:14: number
bezier_curve-flow.js:23:17: number
bezier_curve-flow.js:23:17-26: boolean
bezier_curve-flow.js:23:21-26: number
bezier_curve-flow.js:23:29-31: number
bezier_curve-flow.js:24:7: [number]
bezier_curve-flow.js:24:7-15: number
bezier_curve-flow.js:24:14: number
bezier_curve-flow.js:25:12-16: number
bezier_curve-flow.js:25:16: number
bezier_curve-flow.js:25:19: number
bezier_curve-flow.js:25:19-24: boolean
bezier_curve-flow.js:25:24: number
bezier_curve-flow.js:25:27-29: number
bezier_curve-flow.js:26:9: [number]
bezier_curve-flow.js:26:9-12: number
bezier_curve-flow.js:26:9-24: number
bezier_curve-flow.js:26:11: number
bezier_curve-flow.js:26:17: [number]
bezier_curve-flow.js:26:17-24: number
bezier_curve-flow.js:26:19: number
bezier_curve-flow.js:26:19-23: number
bezier_curve-flow.js:26:23: number
bezier_curve-flow.js:31:10-14: number
bezier_curve-flow.js:31:14: number
bezier_curve-flow.js:31:17: number
bezier_curve-flow.js:31:17-26: boolean
bezier_curve-flow.js:31:21-26: number
bezier_curve-flow.js:31:29-31: number
bezier_curve-flow.js:32:7-12: Array<{x: number, y: number}>
bezier_curve-flow.js:32:7-65: number
bezier_curve-flow.js:32:19-64: {x: number, y: number}
bezier_curve-flow.js:32:23: [number]
bezier_curve-flow.js:32:23-26: number
bezier_curve-flow.js:32:23-40: number
bezier_curve-flow.js:32:25: number
bezier_curve-flow.js:32:30-35: [{x: number, y: number}, {x: number, y: number}]
bezier_curve-flow.js:32:30-38: {x: number, y: number}
bezier_curve-flow.js:32:30-40: number
bezier_curve-flow.js:32:37: number
bezier_curve-flow.js:32:46: [number]
bezier_curve-flow.js:32:46-49: number
bezier_curve-flow.js:32:46-63: number
bezier_curve-flow.js:32:48: number
bezier_curve-flow.js:32:53-58: [{x: number, y: number}, {x: number, y: number}]
bezier_curve-flow.js:32:53-61: {x: number, y: number}
bezier_curve-flow.js:32:53-63: number
bezier_curve-flow.js:32:60: number
bezier_curve-flow.js:39:7: number
bezier_curve-flow.js:40:9-11: {x: number, y: number}
bezier_curve-flow.js:40:15-26: {x: number, y: number}
bezier_curve-flow.js:40:19: number
bezier_curve-flow.js:40:25: number
bezier_curve-flow.js:41:9: number
bezier_curve-flow.js:42:9: number
bezier_curve-flow.js:42:13: number
bezier_curve-flow.js:43:9: number
bezier_curve-flow.js:43:13: number
bezier_curve-flow.js:46:9: Array<number>
bezier_curve-flow.js:46:13-14: Array<number>
bezier_curve-flow.js:47:10-14: number
bezier_curve-flow.js:47:14: number
bezier_curve-flow.js:47:17: number
bezier_curve-flow.js:47:17-26: boolean
bezier_curve-flow.js:47:21-24: BezierCurve
bezier_curve-flow.js:47:21-26: 
bezier_curve-flow.js:47:29-31: number
bezier_curve-flow.js:48:7: Array<number>
bezier_curve-flow.js:48:7-15: number
bezier_curve-flow.js:48:14: number
bezier_curve-flow.js:49:7-12: number
bezier_curve-flow.js:49:12: number
bezier_curve-flow.js:52:10-23: number
bezier_curve-flow.js:52:14-17: BezierCurve
bezier_curve-flow.js:52:14-19: 
bezier_curve-flow.js:52:14-23: number
bezier_curve-flow.js:52:23: number
bezier_curve-flow.js:52:26: number
bezier_curve-flow.js:52:26-31: boolean
bezier_curve-flow.js:52:31: number
bezier_curve-flow.js:52:34-36: number
bezier_curve-flow.js:53:7-9: {x: number, y: number}
bezier_curve-flow.js:53:7-11: number
bezier_curve-flow.js:53:7-37: number
bezier_curve-flow.js:53:16-19: BezierCurve
bezier_curve-flow.js:53:16-21: 
bezier_curve-flow.js:53:16-24: 
bezier_curve-flow.js:53:16-26: 
bezier_curve-flow.js:53:16-33: number
bezier_curve-flow.js:53:16-37: number
bezier_curve-flow.js:53:23: number
bezier_curve-flow.js:53:30: Array<number>
bezier_curve-flow.js:53:30-33: number
bezier_curve-flow.js:53:32: number
bezier_curve-flow.js:53:37: number
bezier_curve-flow.js:54:7-9: {x: number, y: number}
bezier_curve-flow.js:54:7-11: number
bezier_curve-flow.js:54:7-37: number
bezier_curve-flow.js:54:16-19: BezierCurve
bezier_curve-flow.js:54:16-21: 
bezier_curve-flow.js:54:16-24: 
bezier_curve-flow.js:54:16-26: 
bezier_curve-flow.js:54:16-33: number
bezier_curve-flow.js:54:16-37: number
bezier_curve-flow.js:54:23: number
bezier_curve-flow.js:54:30: Array<number>
bezier_curve-flow.js:54:30-33: number
bezier_curve-flow.js:54:32: number
bezier_curve-flow.js:54:37: number
bezier_curve-flow.js:55:7-16: number
bezier_curve-flow.js:55:12: number
bezier_curve-flow.js:55:12-16: number
bezier_curve-flow.js:55:16: number
bezier_curve-flow.js:57:12-14: {x: number, y: number}
bezier_curve-flow.js:68:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:68:14-30: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:72:1-8: 
bezier_curve-flow.js:72:1,103:2: 
bezier_curve-flow.js:72:10-34: string
bezier_curve-flow.js:72:37,103:1: () => void
bezier_curve-flow.js:73:3-4: 
bezier_curve-flow.js:73:3,86:4: 
bezier_curve-flow.js:73:6-40: string
bezier_curve-flow.js:73:43,86:3: () => void
bezier_curve-flow.js:74:9: BezierCurve
bezier_curve-flow.js:74:13-58: BezierCurve
bezier_curve-flow.js:74:17-27: [class: BezierCurve]
bezier_curve-flow.js:74:29-57: [{x: number, y: number}, {x: number, y: number}]
bezier_curve-flow.js:74:30-41: {x: number, y: number}
bezier_curve-flow.js:74:34: number
bezier_curve-flow.js:74:40: number
bezier_curve-flow.js:74:44-56: {x: number, y: number}
bezier_curve-flow.js:74:48-49: number
bezier_curve-flow.js:74:55: number
bezier_curve-flow.js:77:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:77:5-44: void
bezier_curve-flow.js:77:22: BezierCurve
bezier_curve-flow.js:77:22-29: {x: number, y: number}
bezier_curve-flow.js:77:28: number
bezier_curve-flow.js:77:32-43: {x: number, y: number}
bezier_curve-flow.js:77:36: number
bezier_curve-flow.js:77:42: number
bezier_curve-flow.js:78:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:78:5-45: void
bezier_curve-flow.js:78:22: BezierCurve
bezier_curve-flow.js:78:22-29: {x: number, y: number}
bezier_curve-flow.js:78:28: number
bezier_curve-flow.js:78:32-44: {x: number, y: number}
bezier_curve-flow.js:78:36-37: number
bezier_curve-flow.js:78:43: number
bezier_curve-flow.js:81:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:81:5-48: void
bezier_curve-flow.js:81:22: BezierCurve
bezier_curve-flow.js:81:22-31: {x: number, y: number}
bezier_curve-flow.js:81:28-30: number
bezier_curve-flow.js:81:34-47: {x: number, y: number}
bezier_curve-flow.js:81:38: number
bezier_curve-flow.js:81:44-46: number
bezier_curve-flow.js:84:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:84:5-52: void
bezier_curve-flow.js:84:22: BezierCurve
bezier_curve-flow.js:84:22-32: {x: number, y: number}
bezier_curve-flow.js:84:28-31: number
bezier_curve-flow.js:84:35-51: {x: number, y: number}
bezier_curve-flow.js:84:39-41: number
bezier_curve-flow.js:84:47-50: number
bezier_curve-flow.js:85:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:85:5-52: void
bezier_curve-flow.js:85:22: BezierCurve
bezier_curve-flow.js:85:22-32: {x: number, y: number}
bezier_curve-flow.js:85:28-31: number
bezier_curve-flow.js:85:35-51: {x: number, y: number}
bezier_curve-flow.js:85:39-41: number
bezier_curve-flow.js:85:47-50: number
bezier_curve-flow.js:87:3-4: 
bezier_curve-flow.js:87:3,94:4: 
bezier_curve-flow.js:87:6-43: string
bezier_curve-flow.js:87:46,94:3: () => void
bezier_curve-flow.js:88:9: BezierCurve
bezier_curve-flow.js:88:13,90:47: BezierCurve
bezier_curve-flow.js:88:17-27: [class: BezierCurve]
bezier_curve-flow.js:88:29,90:46: [{x: number, y: number}, {x: number, y: number}, {x: number, y: number}]
bezier_curve-flow.js:88:30-44: {x: number, y: number}
bezier_curve-flow.js:88:34-36: number
bezier_curve-flow.js:88:42-43: number
bezier_curve-flow.js:89:30-43: {x: number, y: number}
bezier_curve-flow.js:89:34-35: number
bezier_curve-flow.js:89:41-42: number
bezier_curve-flow.js:90:30-45: {x: number, y: number}
bezier_curve-flow.js:90:34-36: number
bezier_curve-flow.js:90:42-44: number
bezier_curve-flow.js:92:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:92:5-54: void
bezier_curve-flow.js:92:22: BezierCurve
bezier_curve-flow.js:92:22-31: {x: number, y: number}
bezier_curve-flow.js:92:28-30: number
bezier_curve-flow.js:92:34-53: {x: number, y: number}
bezier_curve-flow.js:92:38-43: number
bezier_curve-flow.js:92:49-52: number
bezier_curve-flow.js:93:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:93:5-59: void
bezier_curve-flow.js:93:22: BezierCurve
bezier_curve-flow.js:93:22-32: {x: number, y: number}
bezier_curve-flow.js:93:28-31: number
bezier_curve-flow.js:93:35-58: {x: number, y: number}
bezier_curve-flow.js:93:39-46: number
bezier_curve-flow.js:93:52-57: number
bezier_curve-flow.js:95:3-4: 
bezier_curve-flow.js:95:3,102:4: 
bezier_curve-flow.js:95:6-39: string
bezier_curve-flow.js:95:42,102:3: () => void
bezier_curve-flow.js:96:9: BezierCurve
bezier_curve-flow.js:96:13,99:47: BezierCurve
bezier_curve-flow.js:96:17-27: [class: BezierCurve]
bezier_curve-flow.js:96:29,99:46: [{x: number, y: number}, {x: number, y: number}, {x: number, y: number}, {x: number, y: number}]
bezier_curve-flow.js:96:30-44: {x: number, y: number}
bezier_curve-flow.js:96:34-36: number
bezier_curve-flow.js:96:42-43: number
bezier_curve-flow.js:97:30-43: {x: number, y: number}
bezier_curve-flow.js:97:34-35: number
bezier_curve-flow.js:97:41-42: number
bezier_curve-flow.js:98:30-45: {x: number, y: number}
bezier_curve-flow.js:98:34-36: number
bezier_curve-flow.js:98:42-44: number
bezier_curve-flow.js:99:30-45: {x: number, y: number}
bezier_curve-flow.js:99:34-36: number
bezier_curve-flow.js:99:42-44: number
bezier_curve-flow.js:101:5-10: {$call: (value: any, message?: string) => void, deepEqual: (actual: any, expected: any, message?: string) => void, deepStrictEqual: (actual: any, expected: any, message?: string) => void, doesNotThrow: (block: Function, message?: string) => void, equal: (actual: any, expected: any, message?: string) => void, fail: (actual: any, expected: any, message: string, operator: string) => void, ifError: (value: any) => void, notDeepEqual: (actual: any, expected: any, message?: string) => void, notDeepStrictEqual: (actual: any, expected: any, message?: string) => void, notEqual: (actual: any, expected: any, message?: string) => void, notStrictEqual: (actual: any, expected: any, message?: string) => void, ok: (value: any, message?: string) => void, strictEqual: (actual: any, expected: any, message?: string) => void, throws: (block: Function, error?: ((err: any) => boolean) | Function | RegExp, message?: string) => void}
bezier_curve-flow.js:101:5-53: void
bezier_curve-flow.js:101:22: BezierCurve
bezier_curve-flow.js:101:22-31: {x: number, y: number}
bezier_curve-flow.js:101:28-30: number
bezier_curve-flow.js:101:34-52: {x: number, y: number}
bezier_curve-flow.js:101:38-44: number
bezier_curve-flow.js:101:50-51: number
